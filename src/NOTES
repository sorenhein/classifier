2018-07-14
----------

* Keep all trains (with cluster count) that are close to optimal
  - Do we get 100% that way?

* Mark up the reference trains as ABACAD... vectors

* Mark up the measured trains likely with the same bins, one hopes

* Distance function: Use sums of squares instead?
  - Intra clusters
  - warp
  - balance

* Do _N and _R have same clusters?

* Could guess speed from histogram stretch 



* When disturbing, keep a list of the original peak number for later
  - Also keep track of exact peaks inserted and deleted

* How to match a histogram to a train type
  - Within +/- 20% of number of train peaks
  - Levenshteyn distance below some limit
  - For leading candidates, look at morphing the peaks

* Compare best estimate of insertions and deletions with disturbance
  - Reject if too poor


Overall algorithm
-----------------

* Peak _positions_: 
  - Just do double integral.
  - Maybe force to 0.
  - Find envelope.
  - Detect peak positions.

* Then run the train matcher.

* Then look for peaks in the right places
  - Scale by v and a and shift by d
  - Know where there are quiet intervals as well
  - Integrate up and down
  - Find envelope
  - Detect peak values

* Check against laser measurements!


Formula for residual error in regression: 
a^2 (mean(ysq) - mean(y)sq)  + mean(xsq) - mean(x)sq
