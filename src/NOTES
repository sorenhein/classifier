Cleaning up clusters
--------------------
Look for cluster with maximum 
  lno + #per - dupes
  should be in top 3 of dnorm, or pout

Pick out intervals with right lengths,
put the rest in a catch-up cluster

Derive the period from this interval

Look for other intervals with the right length
See whether they would fit with the right period into this cluster
Move the ones we want
Pout on too-long gaps (smaller ones are OK)

Remove intervals > 1.25 period or so into the overlong bin

Look for intervals with len = period
Move them into a list
Sort the list
Look for seamless pieces
Pout on too-long gaps (a little)

Sort the remaining ones.
Try to anchor the remaining ones to the winner.
So find the abutting or overlapping piece to an interval.
Look where the other pieces ought to be.
Put them in a "cluster".

Look at each of the plausible "stories".
dnorm is a factor.
The average starting and ending peak is a factor:
Should be spiky.
If there are several, the one that's inside the other.



SmallRange doesn't quite work, #23/0, #24, #25, #33/0
#28 asymm ranges pos and neg

2018-09-24
----------
- Need even cleaner peaks before we start clustering.
- s05, 053709, sample 1650: Do we have two peaks? Why not?

2018-09-23
----------
- Detect positive maxima with some streamlining (done)
- Detect negative minima with some streamlining (done)

What's left?

- Positive maxima without a negative minimum in between
  - Can be chatter
  - Can be a proper trough
- Negative minima without a positive maximum in between
  - Can be a negative maximum as a single spike
  - Can be chatter

Combine these into Pieces.

Fill in single spikes and note more complicated behavior.

By now the whole trace should be sliced up.

Look for regularities.

Fill out the complicated pieces.

2018-09-17
----------
- Extract some key periodicity parameters
  - Cluster neighbors (same parameters as single peaks, but two
    together now in the distance measure), hoping to find a strong
    signal for the bogeys.  Might be two clusters or even more.
    - tentatively accepted bogeys
  - For the tentative singles, look for neighbor peaks together with 
    which they would fit a bogey cluster?
    - Look everywhere except in rejected.  Early only if it makes
      quantitative sense (how?)
  - Drop remaining singles except at the beginning and end
  

PeakStats: 
log the category (train or sensor).
Output csv.

Give out the whole PeakList, don't copy into PeakTime?


2018-09-14
----------
We often get the 2nd of maxima above the line.  sensor34, 180956, #2.

Maybe transients can be reduced with filter padding as in filtfilt.


2018-09-02
----------
* Improve the recognition (currently 1072 / 1778 = 60.3%)

* Add separate timers for pre-align and align
* And for peak extraction

* Clean up driver.cpp

2018-07-17
----------
* Some _N and _R trains are almost impossible to separate
  - ICE4_DEU_28 is probably symmetric, in fact?
  - ICE2_DEU_48 ditto?
  - ICE1_old_CHE_56 ditto? [delete?]
  - ICE4_DEU_28 and ICET_DEU_28 have extremely similar ratios

* In doc, make the comments from Train axles.xlsx

* Files to finish:
  SynthTrain cpp and h
  driver.cpp

Visual          OK
mingw           OK
gcc
Mac gcc
Mac clang
Linux

Overall algorithm
-----------------

* Check against laser measurements!
* Output a diagram with the wagons suggested
* throw/catch with error codes (like Build)
* filtfilt padding, how?
* Make independent of sample rate (other than Butterworth?)
* Move to less padding in SegQuiet back
* Implement displacement algorithms
  - Our integration
  - Some kind of scalar product
  - Estimate parameters of the flanks?  What kind of function?
  - Also add timers
* Float (Accel) to double everywhere
* Simpson integration?
