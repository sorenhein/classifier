2018-07-28
----------

1. The given peak positions may be inaccurate (train geometry).
2. There are way too many peak positions missing.
3. Could deal specifically with leading 2 (or 6?) peaks missing.
4. Are the given train types real or Konux estimates?

Wheel detection:
- Wavelets?
- Pseudo-morphological: down-up-down-up-down
- Look at integral over each of 5 periods
- Go by largest first-down integral?  Largest integral?
- Somehow pick out the right ones

2018-07-22
----------

Acceleration traces:

* Initial part fits an exponential decline reasonably well
  - Could perhaps even see spike locations during that time

* Detect average level after initial decline, and sdev

* Look for negative peaks of a certain significance
  - Is a single wheel two negative peaks or one?
  - My old traveling-wave theory?
  - Significance can be peak value and/or cumulative value over
    a short number of samples
  - Are zero crossings more reliable than peaks?

* Will need sensor calibration curves

* Integration:
  - We only have the equi-distant samples
  - Possibly Newton-Cotes of a sensible order


2018-07-17
----------
* Attempt to allow random deletions and insertions (a few)

* Some _N and _R trains are almost impossible to separate
  - ICE4_DEU_28 is probably symmetric, in fact?
  - ICE2_DEU_48 ditto?
  - ICE1_old_CHE_56 ditto? [delete?]
  - ICE4_DEU_28 and ICET_DEU_28 have extremely similar ratios

* In doc, make the comments from Train axles.xlsx

* Files to finish:
  SynthTrain cpp and h
  driver.cpp

* Delete Clusters (stash it in some other project?)

Visual          OK
mingw           OK
gcc
Mac gcc
Mac clang
Linux

Overall algorithm
-----------------

* Peak _positions_: 
  - Just do double integral.
  - Maybe force to 0.
  - Find envelope.
  - Detect peak positions.

* Or some kind of zero-crossing detector

* Then run the train matcher.

* Then look for peaks in the right places
  - Scale by v and a and shift by d
  - Know where there are quiet intervals as well
  - Integrate up and down
  - Find envelope
  - Detect peak values

* Check against laser measurements!

