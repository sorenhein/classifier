2018-07-08
----------

* Database perfect peaks: Add acceleration as well as an argument

* For a fixed train type, look only at random noise with a standard
  deviation on the position.  Run regression on (v, a).  Also have
  a regression only on v.

* When disturbing, keep a list of the original peak number for later
  - Also keep track of exact peaks inserted and deleted

* Look at noiseless and noisy histograms of peaks
  - Does a given train type have a natural number of bins?
  - Can we state this in the train file?
  - Can we generate a string S1-M1-L2-... for this and store in train?

* How to match a histogram to a train type
  - Only valid countries
  - Within +/- 20% of number of train peaks
  - Histogram has roughly the right bin counts
  - Ratios between bin positions is roughly right
  - Levenshteyn distance below some limit
  - For leading candidates, look at morphing the peaks

* Compare best estimate of insertions and deletions with disturbance
  - Reject if too poor


Overall algorithm
-----------------

* Peak _positions_: 
  - Just do double integral.
  - Maybe force to 0.
  - Find envelope.
  - Detect peak positions.

* Then run the train matcher.

* Then look for peaks in the right places
  - Scale by v and a and shift by d
  - Know where there are quiet intervals as well
  - Integrate up and down
  - Find envelope
  - Detect peak values

* Check against laser measurements!





Only read txt files ending on .txt

Formula for residual error in regression: 
a^2 (mean(ysq) - mean(y)sq)  + mean(xsq) - mean(x)sq
