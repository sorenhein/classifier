2018-07-17
----------
The (v,a) estimation could run before the K-means.  See what
cluster number tends to prevail then.  How many misses still?
300 are too many.  Increase penalty for indels?

Optimize a bit: The copying around the clusters.
Stop regress when it's hopeless to improve.

Time synth 4435.66 ms sum, 0.01 ms average
Time cluster 82618.97 ms sum, 0.13 ms average
Time match 40798.61 ms sum, 0.06 ms average
Time regress 41183.27 ms sum, 0.07 ms average

* Attempt to allow random deletions and insertions (a few)

* Some _N and _R trains are almost impossible to separate
  - ICE4_DEU_28 is probably symmetric, in fact?
  - ICE2_DEU_48 ditto?
  - ICE1_old_CHE_56 ditto? [delete?]
  - ICE4_DEU_28 and ICET_DEU_28 have extremely similar ratios

* output/* not working at the moment?

* Files to finish:
  SynthTrain cpp and h
  Clusters: Avoid the malloc, fix the clustering directly
  driver.cpp

Visual          OK
mingw           OK
gcc
Mac gcc
Mac clang
Linux

Fix TODO's.

Overall algorithm
-----------------

* Peak _positions_: 
  - Just do double integral.
  - Maybe force to 0.
  - Find envelope.
  - Detect peak positions.

* Then run the train matcher.

* Then look for peaks in the right places
  - Scale by v and a and shift by d
  - Know where there are quiet intervals as well
  - Integrate up and down
  - Find envelope
  - Detect peak values

* Check against laser measurements!

