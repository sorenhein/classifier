Move out the quiet, Period stuff to PeakSeeds

Gap distance:
actual = 0, ref != 0: dist = 0
actual != 0, ref = 0: dist = inf
Both = 0: dist = 0
Neither = 0: actual

Remaining sensor00 errors:
#23, 082401: Tell findCars it's the first or last car
  (do we know?), last car with 6 peaks --> drop very last peak
  and try 5
#47, 061030: After making car[0], make *4* tall peaks, refine again
#68, 074731: The first car bogey is very odd (too long)

Matching distance against X: inf -- why?  Probably some distance is 0.


Fix distance = inf
Use distance on cars to eliminate some car types
Sort cars

When printing peaks, at T (tall) as well as L, R, L1, R1, L2, R2


Cleaning up clusters
--------------------
3/21
4/38, 45-47, 49
5/36, 59
7/1, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 19, 24-27, 32-36, 
  40, 42, 44, 46, 47
9/0, 2, 5, 6, 8, 9, 10, 13, 14, 16, 19, 20, ...

Next issues:
- Peaks in e.g sensor09 are noisy at the bottom,
  which disturbs index and gradient


Look graphically for misses

2018-09-17
----------
Give out the whole PeakList, don't copy into PeakTime?


2018-09-14
----------
We often get the 2nd of maxima above the line.  sensor34, 180956, #2.

Maybe transients can be reduced with filter padding as in filtfilt.


2018-09-02
----------
* Add separate timers for pre-align and align
* And for peak extraction

* Clean up driver.cpp

2018-07-17
----------
* Some _N and _R trains are almost impossible to separate
  - ICE4_DEU_28 is probably symmetric, in fact?
  - ICE2_DEU_48 ditto?
  - ICE1_old_CHE_56 ditto? [delete?]
  - ICE4_DEU_28 and ICET_DEU_28 have extremely similar ratios

* In doc, make the comments from Train axles.xlsx

* Files to finish:
  SynthTrain cpp and h
  driver.cpp

Visual          OK
mingw           OK
gcc
Mac gcc
Mac clang
Linux

Overall algorithm
-----------------

* Check against laser measurements!
* Output a diagram with the wagons suggested
* throw/catch with error codes (like Build)
* filtfilt padding, how?
* Make independent of sample rate (other than Butterworth?)
* Move to less padding in SegQuiet back
* Implement displacement algorithms
  - Our integration
  - Some kind of scalar product
  - Estimate parameters of the flanks?  What kind of function?
  - Also add timers
* Float (Accel) to double everywhere
* Simpson integration?
* Deconvolution of a "wheel response"?
